buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "0.0.5l"
group= "fluxedCrystals"
archivesBaseName = "fluxedCrystals"

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse"
}
repositories{
    maven { // ttCore
		name 'tterrag Repo'
		url "http://maven.tterrag.com/"
	}
	maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
	 maven {
	 url = "http://mobiusstrip.eu/maven" 
	 }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
	compile "tterrag.core:ttCore:MC${mc_version}-${ttCore_version}:deobf"
	compile files("/libs/BloodMagic-1.7.10-1.2.1b-1-deobf.jar")
	compile "codechicken:CodeChickenLib:${mc_version}-${ccl_version}:dev"
	compile "codechicken:NotEnoughItems:${mc_version}-${nei_version}:dev"
	compile "mcp.mobius.waila:Waila:${waila_version}"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
